@use 'sass:color';

[data-world] {
  margin: 0;
  background-attachment: fixed;

  [data-map] {
    filter: drop-shadow(#{rem-calc(2)} #{rem-calc(4)} #{rem-calc(4)} rgba(0, 0, 0, 0.5));
    //Slight adjustments to account for the visual scaling on "touch"
    @each $continent, $size in $world-map-labels {
      ##{$continent} [data-country] text {
        font-size: $size;
      }
    }

    > [data-country]:not(.active) {
      fill: $aluminum;
      pointer-events: none;
    }

    &[style*="transform"] {
      > .island, 
      > [data-country].disabled {
        opacity: 0;
      }
    }

    [data-continent] {
      fill: $aluminum;
      pointer-events: none;
      &.active {
        cursor: pointer;
        pointer-events: all;
        &:not(.selected) {
          &:focus, 
          &:hover {
            [data-country] {
              &.active {
                &, 
                &.suspended {
                  path, polygon {
                    fill: $secondary;
                    stroke: $secondary;
                  }
                }
              }
            }
          }

          [data-country] {
            &.active {
              path, polygon {
                fill: $primary;
              }
              &.suspended {
                path, polygon {
                  fill: $smoke;
                }
              }
            }
            &.disabled {
              cursor: not-allowed;
              pointer-events: none;
              path, polygon {
                fill: $aluminum;
              }
            }
          }
        }
        &.selected {
          [data-country] {
            @each $key, $color in $highlights {
              $c: color.scale($primary, $lightness: $color, $saturation: -80%);
              &.opacity-#{$key} {
                path, polygon {
                  fill: $c
                }
                &.selected {
                  path, polygon {
                    fill: $secondary;
                  }
                }
                &.suspended {
                  path, polygon {
                    fill: grayscale($c)
                  }
                }
              }
            }
            &.active {
              cursor: pointer;
              &.selected {
                pointer-events: none;
                cursor: help;
              }
              &.suspended {
                path, polygon {
                  fill: grayscale($secondary)
                }
                @each $key, $color in $highlights {
                  $c: color.scale($primary, $lightness: $color, $saturation: -80%);
                  &.opacity-#{$key} {
                    path, polygon {
                      fill: grayscale($c)
                    }
                  }
                }
              }
              &:focus, 
              &:hover {
                &[class*="opacity-"] path, 
                &[class*="opacity-"] polygon {
                  fill: $secondary;
                  stroke: $secondary;
                }
                &.suspended path, 
                &.suspended polygon {
                  fill: grayscale($secondary);
                  stroke: grayscale($secondary);
                }
              }
              text, line {
                opacity: 1
              }
            }
            &:not(.active) {
              cursor: default;
              pointer-events: none;
            }
          }
        }
        &.disabled {
          cursor: not-allowed;
          pointer-events: none;
          [data-country] {
            opacity: 0;
          }
          path, polygon {
            fill: $smoke;
          }
        }
      }
      [data-country] {
        text, line {
          font-weight: $font-weight-normal;
          text-transform: uppercase;
          font-size: $world-font-size;
          fill: $primary;
          opacity: 0;
          &.text-invert {
            fill: $white
          }
        }
      }
    }
  }
}